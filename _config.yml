# Hexo 根目錄 _config.yml

# ─── Site 基本資訊 ───────────────────────────
title: Joseph's Blog                      # 需要改：這是網站名稱，顯示在瀏覽器分頁標題以及部分佈景中。請改成你的網站中文名稱，例如：


subtitle: ''                              # 可選改：若想顯示副標題，可填簡短文字；不需要就留空或刪除。
                                         # 例如： subtitle: "學程式、寫程式、分享程式"

description: '使用 Hexo + Shoka 架設的靜態網站'  # 建議改：這段會放在 HTML 的 <meta name="description"> 裡，對 SEO 有幫助。請改成你的網站描述，例如：
                                         # description: '小明的技術隨筆，記錄前端、後端、部署等筆記。'

keywords: 帥企鵝, gj94fu4k6                # 建議改：相當於 meta keywords，用來告訴搜尋引擎你的網站主題。填你想排名的關鍵字，例如：
                                         # keywords: 網頁開發, JavaScript, 部署, 技術筆記

author: 品逸                             # 必須改：網站作者／博主名稱，預設是 John Doe，請改為你的名字或網路暱稱。例如：
                                         # author: "小明"

language: zh-tw                          # 若你確實是以「繁體中文」為主，可保留 zh-tw。如果想用簡體就改為 zh-cn，或者全站英文就改 en。
                                         # 例如： language: zh-cn

timezone: Asia/Taipei                    # 若你所在時區是臺北，可保留。若你身在其他時區，也請對應改為正確時區，例如：
                                         # Asia/Shanghai（中國大陸）、America/New_York（美東）、Europe/London（倫敦）等。

# ─── URL 設定 ─────────────────────────────
url: http://localhost:4000   # 必須改：這裡填的是「你的 GitHub Pages 網址」或「自有網域」。**絕對不要**留成 .git 結尾。  
                                           # 若你走 GitHub Pages，剛才我們部署成功的網址是：
                                           #   https://jjjjoseph.github.io/website/
                                           # 如果未來改成自有域名，例如 blog.mydomain.com，就改成：
                                           #   url: https://blog.mydomain.com/
root: /website/                 # 必須改：這是網站根目錄，若你部署在 GitHub Pages 的子目錄下，請保留 /website/。如果是根域名（例如 https://mydomain.com/），就改成 /。                                           
permalink: :year/:month/:day/:title/        # 文章網址格式，如果你想保留就留著；也可以改成例如： /:title/，/archives/:year/:month/:title/ 等，只要符合 Hexo 規則即可。

# ─── 目錄路徑設定 ───────────────────────────
# 下面這些目錄基本上不用動，都是 Hexo 產生檔案時的預設放置位置。

source_dir: source       
public_dir: public       
tag_dir: tags            
archive_dir: archives    
category_dir: categories 
code_dir: downloads/code 
i18n_dir: :lang
skip_render:

# ─── 撰寫文章 & 語法高亮設定 ─────────────────
# 一般也不太需要改，除非你想要調整 highlight.js 或 Prism.js 的設定。

new_post_name: :title.md     
default_layout: post         
titlecase: false             
external_link:
  enable: true              
  field: site
  exclude: ''
filename_case: 0
render_drafts: false
post_asset_folder: false
relative_link: false
future: true                 

# ─── 撰寫文章 & 語法高亮設定 ─────────────────
# 以下把 Hexo 預設的 highlight.js 關閉
# syntax_highlighter: highlight.js
# highlight:
#   line_number: true
#   auto_detect: false
#   tab_replace: ''
#   wrap: true
#   hljs: true
# prismjs:
#   preprocess: true
#   line_number: true
#   tab_replace: ''

# Prism.js 外掛設定（hexo-prism-plugin）
prism_plugin:
  mode: 'preprocess'      # Prism.js 渲染模式，通常用 preprocess
  theme: 'okaidia'        # Prism.js 主題：okaidia / tomorrow / twilight / default 等
  line_number: true       # 是否顯示行號
  copy: true              # 是否顯示「複製」按鈕


# ─── 首頁 & 分頁設定 ─────────────────────────
index_generator:             
  per_page: 10              
  order_by: -date           

default_category: uncategorized
category_map:
tag_map:

meta_generator: true        

date_format: YYYY-MM-DD
time_format: HH:mm:ss
updated_option: 'mtime'     

per_page: 10                
pagination_dir: page        

include:
exclude:
ignore:

# ─── 啟用 Shoka 主題 ──────────────────────────
theme: shoka                    # 如果你想換成別的主題再改成對應主題名稱，但現在使用 Shoka，這行無須動。

# ─── 部署 (Deploy) 設定 ───────────────────────
# 這裡要配合你 GitHub 上的倉庫 URL 做調整
deploy:
  type: git
  repository: https://github.com/jjjjoseph/website.git  # 必須改：改成你 GitHub 上真實存在、且有推送權限的倉庫地址，末尾要帶 .git。
                                                        # 範例：https://github.com/你的GitHub帳號/倉庫名稱.git
  branch: gh-pages        # 通常不用改（表示把靜態檔推到 gh-pages 分支），除非你要用別的分支。

# ─── 其餘欄位通常維持預設或留空即可 ─────────────

